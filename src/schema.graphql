scalar DateTime

type Query {
  me: User
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  markets: [Market!]!
  stalls: [Stall!]!
  stall(stallId: String!): Stall
  myStall: Stall!
  myMarkets: [Market!]!
  stallProducts(stallId: String!): [Product!]!
}

type Mutation {
  createDraft(title: String!, content: String!, authorEmail: String!): Post!
  deletePost(id: ID!): Post
  publish(id: ID!): Post
  signup(name: String!, email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  authorize(email: String!, authId: String!, name: String!): AuthPayload!
  createStallHolder(
    stall: StallofUserInput!
    profile: UserProfileInput!
  ): Stall!
  updateStallHolder(input: UserProfileInput!): User!
  updateStall(input: StallofUserInput!): Stall!
  createMarket(name: String!, province: String): Market!
  createProduct(input: CreateProductInput!): Product!
  updateProduct(input: UpdateProductInput!): Product!
}

type AuthPayload {
  token: String!
  user: User!
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  content: String!
  author: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  cell: String
  posts: [Post!]!
  createdAt: DateTime!
  updatedAt: DateTime!
  stall: Stall
  role: String
  image: String
  publicEmail: String
  publicName: String
  bio: String
}

type Stall {
  image: String
  w3w: String
  id: ID!
  lng: String
  lat: String
  name: String
  description: String
  owner: User!
  markets: [Market!]!
  products: [Product!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Product {
  id: ID!
  name: String!
  image: String!
  description: String
  measurementUnit: String
  unitsPerItem: Float
  pricePerItem: Float
  stall: Stall!
}

type Market {
  id: ID!
  name: String!
  lat: Float
  lng: Float
  w3w: String
  image: String
  province: Province
  stalls: [Stall!]!
}

type Province {
  id: ID!
  name: String!
  markets: [Market!]!
}

input UserProfileInput {
  id: String
  cell: String
  image: String
  publicEmail: String
  publicName: String
  bio: String
}

input StallofUserInput {
  stallId: String
  lng: String
  lat: String
  w3w: String
  image: String
  name: String
  description: String
  market: String
}

input CreateProductInput {
  stallId: ID!
  name: String!
  image: String
  description: String
  measurementUnit: String
  unitsPerItem: Float
  pricePerItem: Float
}

input UpdateProductInput {
  productId: ID!
  name: String!
  image: String
  description: String
  measurementUnit: String
  unitsPerItem: Float
  pricePerItem: Float
}
